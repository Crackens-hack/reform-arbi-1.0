Fundamentos Git — refinery
Alcance: SOLO este contenedor. Eres el rey de Git aquí.

Objetivo
- Garantizar commits atómicos, trazables y alineados a la visión del contenedor.

Política
- Granularidad: cada mínimo cambio => un commit.
- Mensajes: formato `tipo: resumen breve` + cuerpo con contexto.
- Tipos sugeridos: feat, fix, docs, chore, refactor, test, perf, ci.
- Prohibido: cambios fuera del contenedor sin autorización de Dominus.

Plantilla de commit
Subject: <tipo>: <resumen en 72 chars máx>

Cuerpo (opcional, recomendado):
- Motivo:
- Alcance (módulos/archivos):
- Riesgos/impacto:
- Pruebas/comprobaciones:

Vinculación con history_git.txt
- Por cada commit/intención, agrega una entrada en `history_git.txt` con: fecha, intención, contexto, archivos, resultado.

Ejemplo
Subject: fix: corregir parseo de profundidad

Motivo: error al leer bids/asks con profundidad parcial.
Alcance: src/orderbook.py, tests/test_orderbook.py
Riesgos: bajo, afecta sólo parseo local.
Pruebas: unitarias verdes, validación manual con snapshot.


Scopes por módulo (refinery)
- codigo/paso-01-schemas
- codigo/paso-02-estructura
- codigo/paso-03-validacion
- codigo/paso-04-unificacion
- codigo/paso-05-filtrado
- codigo/paso-06-simbolos
- codigo/paso-07-directas
- codigo/paso-08-ruteables
- codigo/paso-09-ordenamiento
- codigo/paso-10-indirectas-quote
- codigo/paso-11-indirectas-base
- codigo/paso-12-unificador-reales
- config/db | config/app (según submódulo en `codigo/config/`)
- modulo-absorcion
- precalificador-primario
- dev (scripts/bootstrap/Dockerfile)
- docs (README/entorno)

Ejemplos de mensajes
- Subject: feat(codigo/paso-07-directas): generar cotizaciones directas con filtros
  Cuerpo: Motivo/alcance, riesgos, pruebas y vínculo a `history_git.txt`.
- Subject: fix(codigo/paso-02-estructura): alinear aplanado con schema manual
  Cuerpo: Detalle de claves afectadas y validaciones cruzadas.
- Subject: chore(dev): mejorar idempotencia de bootstrap.sh
- Subject: docs(refinery): documentar prerequisitos (.env, schema manual)

Vinculación operativa
- Cada commit debe reflejarse en `history_git.txt` con fecha, intención, archivos y resultado.
- Cambios de naming (archivos/pasos) requieren nota explícita en `history_git.txt` y confirmación de Dominus si impacta integración.

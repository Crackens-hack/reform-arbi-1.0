# history_git — refinery
# Registro cronológico de cambios y su contexto. Alinear con commits.

Fecha: ____-__-__ __:__ (UTC)
Intención: __________________________
Contexto breve: _____________________
Archivos/áreas: _____________________
Acción/Commit: ______________________
Resultado: (exitoso/fallo/parcial) ___
Notas: ______________________________

Fecha: 2025-09-06 08:39 (UTC)
Intención: Verificación inicial del contenedor y reglas
Contexto breve: Inspección de workspace, lectura de codex-rules/rules.md, validación de archivos clave en custom-codex-refinery
Archivos/áreas: AGENTS.md, codex-rules/rules.md, custom-codex-refinery/{entorno.txt,fundaments-git.txt,history_git.txt}
Acción/Commit: docs: registrar verificación inicial en history_git.txt
Resultado: exitoso
Notas: Motor activo: refinery. Sin cambios fuera del contenedor; sólo documentación y verificación.

Fecha: 2025-09-06 08:41 (UTC)
Intención: Enriquecer visión y convenciones Git del contenedor
Contexto breve: Leí estructura de motor_data_refinery y README; añadí visión refinada, objetivos y dudas en entorno.txt; definí scopes/ejemplos de mensajes en fundaments-git.txt.
Archivos/áreas: custom-codex-refinery/{entorno.txt,fundaments-git.txt}
Acción/Commit: docs: actualizar entorno y fundaments-git con visión y scopes
Resultado: exitoso
Notas: Detectada inconsistencia de nombre en codigo: 10_generar_cotizaciones_indirectas_por_quote.py.py; .env ausente para DB.

Fecha: 2025-09-06 08:55 (UTC)
Intención: Agregar andamiaje de estandarización de campos por exchange
Contexto breve: Creé `codigo/static/campos_estandar.py` con TARGET_FIELDS y MAPPING inicial (binance/kraken). Añadí `codigo/0_mapear_campos_estandar.py` para exportar CSV estandarizado desde CCXT.
Archivos/áreas: motor_data_refinery/codigo/static/campos_estandar.py; motor_data_refinery/codigo/0_mapear_campos_estandar.py
Acción/Commit: feat: scaffolding de traductor de campos estándar
Resultado: exitoso
Notas: MAPPING editable por Dominus; produce `codigo/datos/estandar/symbols_estandar_<exchange>.csv`.

Fecha: 2025-09-06 09:05 (UTC)
Intención: Generalizar cotizaciones directas/indirectas a EXCHANGE_ID y alinear salidas
Contexto breve: 7_directas ahora usa config.EXCHANGE_ID y escribe 1_a_cotizaciones_usdt.csv y 2_a_usdt_equivale_base.csv en datos/<exchange>/cotizaciones_directas_usdt. 10/11 indirectas toman EXCHANGE_ID desde config. Renombrado archivo con doble .py.
Archivos/áreas: codigo/7_generar_cotizaciones_directas.py; codigo/10_generar_cotizaciones_indirectas_por_quote.py; codigo/11_generar_cotizaciones_indirectas_por_base.py; codigo/12_unificador_cotizaciones_reales.py
Acción/Commit: feat: parametrizar por exchange y armonizar rutas/columnas para unificación
Resultado: exitoso
Notas: Mantiene compatibilidad con unificador 12 y módulo absorción. Requiere `config_cotizacion_directa.csv` y archivos previos generados por 6 y 10_ordenamiento.

Fecha: 2025-09-06 09:36 (UTC)
Intención: Ejecutar flujo completo con CSVs (sin DB)
Contexto breve: Añadí scripts helper 6a y 8a para generar inputs desde CCXT; ejecuté 6a→7→8a→9→10→11→12 con EXCHANGE_ID=binance. Ajusté imports/sys.path en 10/11/12 y robustecí parsing Decimal.
Archivos/áreas: codigo/6a_generar_cotizador_directo_desde_ccxt.py; codigo/8a_preparar_pares_indirectos_filtrados.py; codigo/7,10,11,12
Acción/Commit: chore: habilitar pipeline CSV-only y correrlo end-to-end
Resultado: exitoso
Notas: Salidas en codigo/datos/binance/… y copia para módulo de absorción.
